app.title = '水印 - ECharts 下载统计'

var builderJson = {
  "all": 1017,
  "charts": {
    "乐观心态": 394,
    "掌控感": 357,
    "成就感": 418,
    "自信心": 484,
  },
  "components": {
    "适应能力": 482,
    "领导能力": 478,
    "沟通能力": 522,
    "组织能力": 498,
    "抗压能力": 533,
    "社交能力": 571,

  },
  "ie": 1017
};

var downloadJson = {
  "参加创业大赛或活动.js": 146,
  "进入孵化器.js": 325,
  "拿到股权投资.js": 703,

};

var themeJson = {
  "增强了社会活力.js": 284,
  "创造了更多的就业岗位.js": 411,
  "传播了正能量.js": 395,
  "为校友或其他创业者介绍创业经验.js": 171,
  "履行了社会责任.js": 384,
  "为别人创业树立了榜样.js": 273,
  "促进了行业产品或服务的创新.js": 427
};

var waterMarkText = '';

var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
canvas.width = canvas.height = 100;
ctx.textAlign = 'center';
ctx.textBaseline = 'middle';
ctx.globalAlpha = 0.08;
ctx.font = '20px Microsoft Yahei';
ctx.translate(50, 50);
ctx.rotate(-Math.PI / 4);
ctx.fillText(waterMarkText, 0, 0);

option = {
  backgroundColor: {
    type: 'pattern',
    image: canvas,
    repeat: 'repeat'
  },
  tooltip: {},
  title: [{
    text: '个人心态和个人能力变化',
    subtext: '总计 ' + builderJson.all,
    x: '25%',
    textAlign: 'center'
  }, {
    text: '创业企业初始资金来源',
    subtext: '总计 ' + Object.keys(downloadJson).reduce(function(all, key) {
      return all + downloadJson[key];
    }, 0),
    x: '75%',
    textAlign: 'center'
  }, {
    text: '创业者认为创业对社会的贡献',
    subtext: '总计 ' + Object.keys(themeJson).reduce(function(all, key) {
      return all + themeJson[key];
    }, 0),
    x: '75%',
    y: '50%',
    textAlign: 'center'
  }],
  grid: [{
    top: 50,
    width: '50%',
    bottom: '45%',
    left: 10,
    containLabel: true
  }, {
    top: '55%',
    width: '50%',
    bottom: 0,
    left: 10,
    containLabel: true
  }],
  xAxis: [{
    type: 'value',
    max: builderJson.all,
    splitLine: {
      show: false
    }
  }, {
    type: 'value',
    max: builderJson.all,
    gridIndex: 1,
    splitLine: {
      show: false
    }
  }],
  yAxis: [{
    type: 'category',
    data: Object.keys(builderJson.charts),
    axisLabel: {
      interval: 0,
      rotate: 30
    },
    splitLine: {
      show: false
    }
  }, {
    gridIndex: 1,
    type: 'category',
    data: Object.keys(builderJson.components),
    axisLabel: {
      interval: 0,
      rotate: 30
    },
    splitLine: {
      show: false
    }
  }],
  series: [{
    type: 'bar',
    stack: 'chart',
    z: 3,
    label: {
      normal: {
        position: 'right',
        show: true
      }
    },
    data: Object.keys(builderJson.charts).map(function(key) {
      return builderJson.charts[key];
    })
  }, {
    type: 'bar',
    stack: 'chart',
    silent: true,
    itemStyle: {
      normal: {
        color: '#eee'
      }
    },
    data: Object.keys(builderJson.charts).map(function(key) {
      return builderJson.all - builderJson.charts[key];
    })
  }, {
    type: 'bar',
    stack: 'component',
    xAxisIndex: 1,
    yAxisIndex: 1,
    z: 3,
    label: {
      normal: {
        position: 'right',
        show: true
      }
    },
    data: Object.keys(builderJson.components).map(function(key) {
      return builderJson.components[key];
    })
  }, {
    type: 'bar',
    stack: 'component',
    silent: true,
    xAxisIndex: 1,
    yAxisIndex: 1,
    itemStyle: {
      normal: {
        color: '#eee'
      }
    },
    data: Object.keys(builderJson.components).map(function(key) {
      return builderJson.all - builderJson.components[key];
    })
  }, {
    type: 'pie',
    radius: [0, '30%'],
    center: ['75%', '25%'],
    data: Object.keys(downloadJson).map(function(key) {
      return {
        name: key.replace('.js', ''),
        value: downloadJson[key]
      }
    })
  }, {
    type: 'pie',
    radius: [0, '30%'],
    center: ['75%', '75%'],
    data: Object.keys(themeJson).map(function(key) {
      return {
        name: key.replace('.js', ''),
        value: themeJson[key]
      }
    })
  }]
}